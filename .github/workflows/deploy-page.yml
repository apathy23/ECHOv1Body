name: Deploy to Github Pages

on:
  push:
    branches:
      - release
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  
jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
          
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          release_branches: 'release'
          pre_release_branches: 'main'
          append_to_pre_release_tag: 'beta'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set page url
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)
          USER_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)

          if [ $REPO_NAME = "$USER_NAME.github.io" ]; then
            PAGE_URL="https://$USER_NAME.github.io/"
          else
            PAGE_URL="https://$USER_NAME.github.io/$REPO_NAME/"
          fi

          echo "PAGE_URL=$PAGE_URL" >> $GITHUB_ENV

      - name: Copy Beta Resources
        run: pnpm resources:rel --type beta

      - name: Build Beta
        run: pnpm build --configBaseURL $PAGE_URL --configBeta
      
      - name: Create Change Log and Page
        run: |
          git tag | grep 'beta' | xargs -r git tag -d
          pnpm changelog 
          pnpm changelog:page
          git fetch --tags

      - name: Checkout release
        uses: actions/checkout@v3
        with:
          ref: release
          submodules: 'recursive'
          clean: false
          fetch-depth: 0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
  
      - name: Build
        run: pnpm build --configBaseURL $PAGE_URL

      - name: Copy Resources
        run: pnpm resources:rel

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  version-notification:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release
        uses: actions/checkout@v4
        with:
          ref: release
          submodules: 'recursive'
          fetch-depth: 0
        
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install conventional-changelog
        run: pnpm add -g conventional-changelog-cli

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Remove local beta tags
        run: git tag | grep 'beta' | xargs -r git tag -d

      - name: Generate changelog info and set to output
        id: changelog
        run: |
          changelog=$(conventional-changelog -p angular -r 2 | sed '1,6d')
          version=$(git describe --tags --abbrev=0)
          name=$(node ./scripts/.package-props.js displayName)

          echo "# [$name] New version released!" >> temp.txt
          echo "Version: $version" >> temp.txt
          echo "$changelog" >> temp.txt

          echo 'message<<EOF' >> $GITHUB_OUTPUT
          cat temp.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: ${{ steps.changelog.outputs.message }}